}
# DESeq2 fold-change for enhancer in SE only
# make count matrix
count_matrix <- as.data.frame(cbind(s1_r1_fc_in$counts,s1_r2_fc_in$counts,
s2_r1_fc_in$counts,s2_r2_fc_in$counts))
colnames(count_matrix) <- c("S1_r1","S1_r2","S2_r1","S2_r2")
count_matrix
nrow(count_matrix)
write.table("demo_dataset/chr21_count_collapsed.txt",sep='\t',quote=F)
write.table(count_matrix,"demo_dataset/chr21_count_collapsed.txt",sep='\t',quote=F)
raw_count_collapsed <- read.table("demo_dataset/chr21_count_collapsed.txt",sep='\t',header=T)
raw_count <- raw_count_collapsed
count_matrix <- raw_count
count_matrix
row.names(count_matrix) <- count_matrix$enhancer
count_matrix <- count_matrix[,-1]
row.names(count_matrix) <- count_matrix[,1]
count_matrix <- raw_count
row.names(count_matrix) <- count_matrix[,1]
count_matrix <- count_matrix[,-1]
count_matrix
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
devtools::document()
devtools::load_all()
setwd("~/Projects/super_enhancer/se_diff_paper/DASE_test/")
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
devtools::document()
devtools::load_all()
setwd("~/Projects/super_enhancer/se_diff_paper/DASE_test/")
raw_count <- read.table("demo_dataset/chr21_count.txt",sep='\t',header=T)
raw_count_collapsed <- read.table("demo_dataset/chr21_count_collapsed.txt",sep='\t',header=T)
system.time(se_profile_out <- DASE(se_in = main_df,e_df = pool_enhancer_df,
bl_file = blacklist_df,has_bl_file = T, permut = T,
s1_pair = F, s2_pair = F,permut_type = "normal",
s1_r1_bam = s1_r1_bam_path,s1_r2_bam = s1_r2_bam_path,
s2_r1_bam = s2_r1_bam_path,s2_r2_bam = s2_r2_bam_path))
system.time(se_profile_out_2 <- DASE(se_in = main_df,e_df = pool_enhancer_df,
has_enhancer_count = T, enhancer_count_table = raw_count,
if_collapsed = T,
bl_file = blacklist_df,has_bl_file = T, permut = T,
permut_type = "normal"))
system.time(se_profile_out_3 <- DASE(se_in = main_df,e_df = pool_enhancer_df,
has_enhancer_count = T, enhancer_count_table = raw_count,
if_collapsed = F,
bl_file = blacklist_df,has_bl_file = T, permut = T,
permut_type = "normal"))
se_profile_out$boxplot
se_profile_out_3$boxplot
se_profile_out_2$boxplot
se_profile_out$boxplot
se_profile_out_2$boxplot
se_profile_out_2$se_deseq_out
se_profile_out$se_deseq_out
raw_count
raw_count <- raw_count_collapsed
# extract chr, start, end from raw_count
raw_count_temp<- separate(data = raw_count, col = enhancer, into = c("chr", "start","end"), sep = "_")
# merge enhancers
ir <- IRanges(as.integer(raw_count_temp$start),
as.integer(raw_count_temp$end),
names = raw_count_temp$chr)
e_merge_by_chr <- rbindlist(lapply(split(ir, names(ir)),
function(x) as.data.table(reduce(x,min.gapwidth = 0))),
idcol = "chr")
# create merged enhancer names
e_merge_by_chr$e_merge_name <- apply(e_merge_by_chr[,c(1:3)],1, paste,collapse ="_" )
e_merge_by_chr$e_merge_name <- gsub(" ","",e_merge_by_chr$e_merge_name)
ir_merge <- IRanges(e_merge_by_chr$start,
e_merge_by_chr$end,
names=e_merge_by_chr$chr)
hit <- findOverlaps(ir,ir_merge)
raw_count_temp$e_merge_name[queryHits(hit)] <- e_merge_by_chr$e_merge_name[subjectHits(hit)]
# aggreagte count
count_matrix <- aggregate(.~e_merge_name,data=raw_count_temp[-c(1:3)],sum)
count_matrix
raw_count_collapsed
chr21_10119622_10119934
count_matrix[which(count_matrix$e_merge_name=="chr21_10119622_10119934"),]
raw_count_collapsed[which(raw_count_collapsed$enhancer=="chr21_10119622_10119934"),]
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
devtools::document()
devtools::load_all()
system.time(se_profile_out_2 <- DASE(se_in = main_df,e_df = pool_enhancer_df,
has_enhancer_count = T, enhancer_count_table = raw_count,
bl_file = blacklist_df,has_bl_file = T, permut = T,
permut_type = "normal"))
e_df
nrow(e_df)
nrow(se_df)
# merge enhancers with gaps less than 500bps
ir <- IRanges(e_df$start,
e_df$end,
names = e_df$chr)
e_merge_by_chr <- rbindlist(lapply(split(ir, names(ir)),
function(x) as.data.table(reduce(x,min.gapwidth = 0))),
idcol = "chr")
nrow(e_merge_by_chr)
fc_saf_in <- e_merge_by_chr[,c(5,1,2,3)]
fc_saf_in$Strand <- rep(".",nrow(fc_saf_in))
colnames(fc_saf_in) <- c("GeneID","Chr","Start","End","Strand")
# count each bam files
# check if sample 1 is  paired-end
if (s1_pair == F) {
s1_r1_fc_in <- featureCounts(files=s1_r1_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF")
s1_r2_fc_in <- featureCounts(files=s1_r2_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF")
} else {
s1_r1_fc_in <- featureCounts(files=s1_r1_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF",
isPairedEnd=TRUE)
s1_r2_fc_in <- featureCounts(files=s1_r2_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF",
isPairedEnd=TRUE)
}
# check if smaple 2 is paired-end
if (s2_pair == F) {
s2_r1_fc_in <- featureCounts(files=s2_r1_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF")
s2_r2_fc_in <- featureCounts(files=s2_r2_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF")
} else {
s2_r1_fc_in <- featureCounts(files=s2_r1_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF",
isPairedEnd=TRUE)
s2_r2_fc_in <- featureCounts(files=s2_r2_bam,annot.ext=fc_saf_in,
isGTFAnnotationFile = "SAF",
isPairedEnd=TRUE)
}
# DESeq2 fold-change for enhancer in SE only
# make count matrix
count_matrix <- as.data.frame(cbind(s1_r1_fc_in$counts,s1_r2_fc_in$counts,
s2_r1_fc_in$counts,s2_r2_fc_in$counts))
colnames(count_matrix) <- c("S1_r1","S1_r2","S2_r1","S2_r2")
count_matrix
nrow(count_matrix)
raw_count
nrow(raw_count)
# extract chr, start, end from raw_count
raw_count_temp<- separate(data = raw_count, col = enhancer, into = c("chr", "start","end"), sep = "_")
raw_count_temp
# merge enhancers
ir <- IRanges(as.integer(raw_count_temp$start),
as.integer(raw_count_temp$end),
names = raw_count_temp$chr)
e_merge_by_chr <- rbindlist(lapply(split(ir, names(ir)),
function(x) as.data.table(reduce(x,min.gapwidth = 0))),
idcol = "chr")
# create merged enhancer names
e_merge_by_chr$e_merge_name <- apply(e_merge_by_chr[,c(1:3)],1, paste,collapse ="_" )
e_merge_by_chr$e_merge_name <- gsub(" ","",e_merge_by_chr$e_merge_name)
e_merge_by_chr
e_merge_by_chr$e_merge_name == raw_count$enhancer
ir_merge <- IRanges(e_merge_by_chr$start,
e_merge_by_chr$end,
names=e_merge_by_chr$chr)
hit <- findOverlaps(ir,ir_merge)
hit
raw_count_temp$e_merge_name[queryHits(hit)] <- e_merge_by_chr$e_merge_name[subjectHits(hit)]
# aggreagte count
count_matrix <- aggregate(.~e_merge_name,data=raw_count_temp[-c(1:3)],sum)
count_matrix
raw_count
count_matrix
count_matrix
raw_count
count_matrix$e_merge_name==raw_count$enhancer
View(count_matrix)
View(raw_count)
# DESeq2 fold-change for enhancer in SE only
# make count matrix
row.names(count_matrix) <- count_matrix$e_merge_name
count_matrix <- count_matrix[,-1]
# remove enhancers with 0 value for all sample
not_zero_in_se <- apply(count_matrix, 1, function(row) sum(row) != 0)
count_matrix <- count_matrix[not_zero_in_se,]
nrow(count_matrix)
# make sample data for DESeq2
sample_data <- data.frame(row.names = c("S1_r1","S1_r2",
"S2_r1","S2_r2"),
condition = c("S1","S1","S2","S2"))
count_matrix
dds <- DESeqDataSetFromMatrix(countData = count_matrix,
colData = sample_data,
design = ~ condition)
# run DEseq2
dds <- DESeq(dds)
res <- results(dds)
raw_count <- counts(dds)
normalized_count <- counts(dds,normalized=TRUE)
colnames(normalized_count) <- c("S1_r1_norm","S1_r2_norm","S2_r1_norm","S2_r2_norm")
# shrinking LFC and MA plot
resLFC <- lfcShrink(dds, coef="condition_S2_vs_S1", type="apeglm")
# make final output
temp_output <- data.frame()
temp_output <- as.data.frame(cbind(raw_count,normalized_count,res,resLFC))
temp_output <- setDT(temp_output, keep.rownames = "e_merge_name")[]
# combine DESeq2 results with merged enhancer profile
merged_out_df <- merge(e_merge_by_chr,temp_output,by="e_merge_name")
merged_out_df
# assign merged super-enhancer name to merged enhancer deseq outfile
final_out_df <- data.frame()
for (i in c(1:nrow(se_df))) {
temp_merge <- merged_out_df[which(merged_out_df$chr==se_df$chr[i] &
merged_out_df$start>=se_df$start[i] &
merged_out_df$end<= se_df$end[i]),]
temp_merge$se_merge_name <- rep(se_df$se_merge_name[i],nrow(temp_merge))
final_out_df <- rbind(final_out_df,temp_merge)
}
# save size_factor
size_factor <- sizeFactors(dds)
not_in_se_deseq <- temp_output[!(temp_output$e_merge_name %in% final_out_df$e_merge_name),]
# make output list
out <- list()
out$lfc_shrink <- resLFC
out$enhancer_deseq_result <- final_out_df
out$size_factor <- size_factor
out$not_in_se_deseq <- not_in_se_deseq
final_out_df
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
devtools::document()
devtools::load_all()
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
devtools::document()
devtools::load_all()
setwd("~/Projects/super_enhancer/se_diff_paper/DASE_test/")
library(tidyr)
# rose SE output_new table
main_sample_1_r1 <- read.table("demo_dataset/K562_1_se_chr21.bed",sep='\t', header =F)
main_sample_1_r2 <- read.table("demo_dataset/K562_2_se_chr21.bed",sep='\t', header =F)
main_sample_2_r1 <- read.table("demo_dataset/MCF7_UOD_1_se_chr21.bed",sep='\t', header =F)
main_sample_2_r2 <- read.table("demo_dataset/MCF7_UOD_2_se_chr21.bed",sep='\t', header =F)
main_df <- rbind(main_sample_1_r1,main_sample_2_r1,main_sample_1_r2,main_sample_2_r2)
colnames(main_df) <- c("CHROM","START","STOP","REGION_ID","Signal","STRAND")
blacklist_df <- read.table("~/Projects/super_enhancer/ENCFF356LFX_blacklist.bed",sep = '\t')
enhancer_s1_r1 <- read.table("demo_dataset/K562_1_e_chr21.bed",sep='\t')
enhancer_s1_r2 <- read.table("demo_dataset/K562_2_e_chr21.bed",sep='\t')
enhancer_s2_r1 <- read.table("demo_dataset/MCF7_UOD_1_e_chr21.bed",sep='\t')
enhancer_s2_r2 <- read.table("demo_dataset/MCF7_UOD_2_e_chr21.bed",sep='\t')
s1_r1_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/K562_1_chr21.bam"
s1_r2_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/K562_2_chr21.bam"
s2_r1_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/MCF7_UOD_1_chr21.bam"
s2_r2_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/MCF7_UOD_2_chr21.bam"
pool_enhancer_df <- rbind(enhancer_s1_r1,enhancer_s1_r2,enhancer_s2_r1,enhancer_s2_r2)
colnames(pool_enhancer_df) <- c("chr", "start","end","name","score","strand",
"signalValue","pValue","qValue","peak")
raw_count <- read.table("demo_dataset/chr21_count.txt",sep='\t',header=T)
raw_count_collapsed <- read.table("demo_dataset/chr21_count_collapsed.txt",sep='\t',header=T)
system.time(se_profile_out_2 <- DASE(se_in = main_df,e_df = pool_enhancer_df,
has_enhancer_count = T, enhancer_count_table = raw_count_collapsed,
bl_file = blacklist_df,has_bl_file = T, permut = T,
permut_type = "normal"))
se_profile_out_2$se_deseq_out
se_profile_out_2$boxplot
se_profile_out$boxplot
table(se_profile_out_2$se_category$category)
table(se_profile_out$se_category$category)
se_profile_out$cutoff
se_profile_out_2$cutoff
se_profile_out$density_plot
se_profile_out_2$density_plot
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
devtools::document()
devtools::load_all()
devtools::use_vignette()
devtools::use_vignette("my-vignette")
usethis::use_vignette()
usethis::use_vignette("my-vignette")
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
devtools::document()
devtools::load_all()
setwd("~/Projects/super_enhancer/se_diff_paper/DASE_test/")
library(tidyr)
# rose SE output_new table
main_sample_1_r1 <- read.table("demo_dataset/K562_1_se_chr21.bed",sep='\t', header =F)
main_sample_1_r2 <- read.table("demo_dataset/K562_2_se_chr21.bed",sep='\t', header =F)
main_sample_2_r1 <- read.table("demo_dataset/MCF7_UOD_1_se_chr21.bed",sep='\t', header =F)
main_sample_2_r2 <- read.table("demo_dataset/MCF7_UOD_2_se_chr21.bed",sep='\t', header =F)
main_df <- rbind(main_sample_1_r1,main_sample_2_r1,main_sample_1_r2,main_sample_2_r2)
colnames(main_df) <- c("CHROM","START","STOP","REGION_ID","Signal","STRAND")
blacklist_df <- read.table("~/Projects/super_enhancer/ENCFF356LFX_blacklist.bed",sep = '\t')
enhancer_s1_r1 <- read.table("demo_dataset/K562_1_e_chr21.bed",sep='\t')
enhancer_s1_r2 <- read.table("demo_dataset/K562_2_e_chr21.bed",sep='\t')
enhancer_s2_r1 <- read.table("demo_dataset/MCF7_UOD_1_e_chr21.bed",sep='\t')
enhancer_s2_r2 <- read.table("demo_dataset/MCF7_UOD_2_e_chr21.bed",sep='\t')
s1_r1_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/K562_1_chr21.bam"
s1_r2_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/K562_2_chr21.bam"
s2_r1_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/MCF7_UOD_1_chr21.bam"
s2_r2_bam_path <- "~/Projects/super_enhancer/se_diff_paper/DASE_test/demo_dataset/MCF7_UOD_2_chr21.bam"
pool_enhancer_df <- rbind(enhancer_s1_r1,enhancer_s1_r2,enhancer_s2_r1,enhancer_s2_r2)
colnames(pool_enhancer_df) <- c("chr", "start","end","name","score","strand",
"signalValue","pValue","qValue","peak")
raw_count <- read.table("demo_dataset/chr21_count.txt",sep='\t',header=T)
raw_count_collapsed <- read.table("demo_dataset/chr21_count_collapsed.txt",sep='\t',header=T)
system.time(se_profile_out <- DASE(se_in = main_df,e_df = pool_enhancer_df,
bl_file = blacklist_df,has_bl_file = T, permut = T,
s1_pair = F, s2_pair = F,permut_type = "normal",
s1_r1_bam = s1_r1_bam_path,s1_r2_bam = s1_r2_bam_path,
s2_r1_bam = s2_r1_bam_path,s2_r2_bam = s2_r2_bam_path))
saveRDS(se_profile_out, file = "demo_out/se_out.rds")
write.table(se_profile_out$se_meta,file = "demo_out/se_meta.txt",sep='\t',
row.names = FALSE,quote = FALSE)
write.table(se_profile_out$se_category,file = "demo_out/se_category.txt",sep='\t',
row.names = FALSE,quote = FALSE)
write.table(se_profile_out$se_category_sensitive,file = "demo_out/se_category_sensitive.txt",sep='\t',
row.names = FALSE,quote = FALSE)
write.table(se_profile_out$se_fit,file = "demo_out/enhancer_sp_fit.txt",sep='\t',
row.names = FALSE,quote = FALSE)
write.table(se_profile_out$se_deseq_out,file = "demo_out/enhancer_deseq_out.txt",sep='\t',
row.names = FALSE,quote = FALSE)
write.table(se_profile_out$se_seg,file = "demo_out/se_segment.txt",sep='\t',
row.names = FALSE,quote = FALSE)
write.table(se_profile_out$cutoff,file = "output_new/cutoff.txt",sep='\t',
row.names = FALSE,quote = FALSE)
pdf(file = "demo_out/boxplot.pdf")
se_profile_out$boxplot
dev.off()
pdf(file = "demo_out/permutation.pdf")
se_profile_out$density_plot
dev.off()
pdf("demo_out/MAplot.pdf")
plotMA(se_profile_out$lfc_shrink)
dev.off()
pattern_list <- se_profile_out$pattern_list
for (i in c(1:length(pattern_list))) {
# create out plot name
cat_dir <- se_profile_out$se_category$category[which(se_profile_out$se_category$se_merge_name==
pattern_list[[i]]$labels$title)]
pdf_name <- paste(gsub(" pattern", "",pattern_list[[i]]$labels$title),".pdf",sep="")
pdf_full_path <- paste0("demo_out/patterns/",cat_dir,"/",pdf_name)
# save to pdf
pdf(file = pdf_full_path,width = 8, height = 4)
print(pattern_list[[i]])
dev.off()
}
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
library(DASE)
?SEfilter
# rose SE output_new table
se_path <- system.file("extdata","SE.bed",package="DASE")
se_region <- read.table(se_path,sep="\t",header=F)
blacklist_path <- system.file("extdata","region_blacklist.bed",package="DASE")
enhancer_path <- system.file("extdata","enhancer.bed",package="DASE")
enhancer_region <- read.table(enhancer_path,sep="\t",header=F)
enhancer_count_path <- system.file("extdata","chr21_enhancer_count.txt",package="DASE")
enhancer_count <- read.table(enhancer_count_path,sep="\t",header=T)
# BAM files
s1_r1_bam <- system.file("extdata","K562_1_chr21.bam",package="DASE")
s1_r2_bam <- system.file("extdata","K562_2_chr21.bam",package="DASE")
s2_r1_bam <- system.file("extdata","MCF7_1_chr21.bam",package="DASE")
s2_r2_bam <- system.file("extdata","MCF7_2_chr21.bam",package="DASE")
# BigWig files
s1_r1_bw <- system.file("extdata","K562_1_chr21.bw",package="DASE")
s1_r2_bw <- system.file("extdata","K562_2_chr21.bw",package="DASE")
s2_r1_bw <- system.file("extdata","MCF7_1_chr21.bw",package="DASE")
s2_r2_bw <- system.file("extdata","MCF7_2_chr21.bw",package="DASE")
test_1<- SEfilter(se_in=se_region)
?knitr
?opts_chunk
# step_1: filter
step_1_out <- SEfilter(SE_region,bl_file = blacklist_df,has_bl_file = T)
# step_1: filter
step_1_out <- SEfilter(SE_region,bl_file = blacklist_df)
se_meta <- step_1_out$se_merged_meta
# step_1: filter
step_1_out <- SEfilter(se_region,bl_file = blacklist_df)
se_meta <- step_1_out$se_merged_meta
blacklist_df <- read.table(blacklist_path,sep="\t",header=F)
# step_1: filter
step_1_out <- SEfilter(se_region,bl_file = blacklist_df)
se_meta <- step_1_out$se_merged_meta
# step_2 enhancer foldchange
step_2_out <- enhancerFoldchange_bam(e_df = enhancer_region,
se_df = step_1_out$se_merged_meta,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam)
system.time(se_profile_out <- DASE(se_in = se_region,e_in = enhancer_region,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
se_profile_out
se_profile_out$se_deseq_out
se_profile_out$se_fit
se_profile_out$pattern_list[[1]]
length(se_profile_out$pattern_list)
names(se_profile_out)
remove.packages("DASE")
devtools::install_github("https://github.com/tenglab/DASE.git")
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
library(DASE)
# rose SE output_new table
se_path <- system.file("extdata","SE.bed",package="DASE")
se_region <- read.table(se_path,sep="\t",header=F)
blacklist_path <- system.file("extdata","region_blacklist.bed",package="DASE")
blacklist_df <- read.table(blacklist_path,sep="\t",header=F)
enhancer_path <- system.file("extdata","enhancer.bed",package="DASE")
enhancer_region <- read.table(enhancer_path,sep="\t",header=F)
enhancer_count_path <- system.file("extdata","chr21_enhancer_count.txt",package="DASE")
enhancer_count <- read.table(enhancer_count_path,sep="\t",header=T)
# BAM files
s1_r1_bam <- system.file("extdata","K562_1_chr21.bam",package="DASE")
s1_r2_bam <- system.file("extdata","K562_2_chr21.bam",package="DASE")
s2_r1_bam <- system.file("extdata","MCF7_1_chr21.bam",package="DASE")
s2_r2_bam <- system.file("extdata","MCF7_2_chr21.bam",package="DASE")
# BigWig files
s1_r1_bw <- system.file("extdata","K562_1_chr21.bw",package="DASE")
s1_r2_bw <- system.file("extdata","K562_2_chr21.bw",package="DASE")
s2_r1_bw <- system.file("extdata","MCF7_1_chr21.bw",package="DASE")
s2_r2_bw <- system.file("extdata","MCF7_2_chr21.bw",package="DASE")
test_1<- SEfilter(se_in=se_region)
system.time(se_profile_out <- DASE(se_in = se_region,e_in = enhancer_region,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
devtools:document()
devtools::document()
remove.packages("DASE")
devtools::install_github("https://github.com/tenglab/DASE.git")
# set work directory
setwd("~/Projects/super_enhancer/se_diff_paper/DASE/")
library(DASE)
# rose SE output_new table
se_path <- system.file("extdata","SE.bed",package="DASE")
se_region <- read.table(se_path,sep="\t",header=F)
blacklist_path <- system.file("extdata","region_blacklist.bed",package="DASE")
blacklist_df <- read.table(blacklist_path,sep="\t",header=F)
enhancer_path <- system.file("extdata","enhancer.bed",package="DASE")
enhancer_region <- read.table(enhancer_path,sep="\t",header=F)
enhancer_count_path <- system.file("extdata","chr21_enhancer_count.txt",package="DASE")
enhancer_count <- read.table(enhancer_count_path,sep="\t",header=T)
# BAM files
s1_r1_bam <- system.file("extdata","K562_1_chr21.bam",package="DASE")
s1_r2_bam <- system.file("extdata","K562_2_chr21.bam",package="DASE")
s2_r1_bam <- system.file("extdata","MCF7_1_chr21.bam",package="DASE")
s2_r2_bam <- system.file("extdata","MCF7_2_chr21.bam",package="DASE")
# BigWig files
s1_r1_bw <- system.file("extdata","K562_1_chr21.bw",package="DASE")
s1_r2_bw <- system.file("extdata","K562_2_chr21.bw",package="DASE")
s2_r1_bw <- system.file("extdata","MCF7_1_chr21.bw",package="DASE")
s2_r2_bw <- system.file("extdata","MCF7_2_chr21.bw",package="DASE")
test_1<- SEfilter(se_in=se_region)
system.time(se_profile_out <- DASE(se_in = se_region,e_in = enhancer_region,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
names(se_profile_out)
se_profile_out$pattern_list[[2]]
se_profile_out$pattern_list[[3]]
se_profile_out$pattern_list[[4]]
se_profile_out$pattern_list[[5]]
se_profile_out$pattern_list[[6]]
se_profile_out$pattern_list[[10]]
se_profile_out$se_category[which(se_profile_out$se_category$se_merge_name=="chr21_34863697_34890719"),]
system.time(se_profile_out <- DASE(se_in = se_region,e_in = enhancer_region,permut_type = 'stringent',
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
system.time(se_profile_out_2 <- DASE(se_in = se_region,e_in = enhancer_region,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
se_profile_out$density_plot
se_profile_out_2$density_plot
devtools::document()
remove.packages("DASE")
devtools::install_github("https://github.com/tenglab/DASE.git")
se_in
se_region
system.time(se_profile_out <- DASE(se_in = se_region,e_in = enhancer_region,
custom_range = c("chr21:14735763-29634779","chr21:33539902-43710703"),
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
layout(matrix(1:2,1,2))
system.time(se_profile_out <- DASE(se_in = se_region,e_in = enhancer_region,
custom_range = c("chr21:14735763-29634779","chr21:33539902-43710703"),
permut=F,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
system.time(se_profile_out_2 <- DASE(se_in = SE_region,e_in = enhancer_region,
bl_file = blacklist_df, permut = F,
s1_pair = F, s2_pair = F,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
system.time(se_profile_out_2 <- DASE(se_in = se_region,e_in = enhancer_region,
bl_file = blacklist_df, permut = F,
s1_pair = F, s2_pair = F,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
layout(matrix(1:2,1,2))
se_profile_out$boxplot
se_profile_out_2$boxplot
matrix(1:2,1,2)
devtools::document()
system.time(se_profile_out_2 <- DASE(se_in = se_region,e_in = enhancer_region,
bl_file = blacklist_df, permut = F,
s1_pair = F, s2_pair = F,
s1_r1_bam = s1_r1_bam,s1_r2_bam = s1_r2_bam,
s2_r1_bam = s2_r1_bam,s2_r2_bam = s2_r2_bam))
devtools::document()
devtools::document()
devtools::build_vignettes()
browseVignettes("DASE")
browseVignettes("DASE")
vignette("DASE")
browseVignettes("DASE")
install.packages('tinytex')
install.packages("tinytex")
tinytex::install_tinytex()
