test_m <- matrix(c(4,69,26,438),nrow=2)
test_m
test_m <- matrix(c(4,26,69,438),nrow=2)
test_m
fisher.test(test_m)
install.packages("devtools")
library(devtools)
library(devtools)
devtools::install_github("hadley/devtools")
install.packages("processx")
library(devtools)
install_github("Xianglmoffitt/SEprofiler")
install_github("tenglab/SEprofile")
devtools::create("~/Projects/super_enhancer/SEprofiler")
gc()
setwd("~/Projects/super_enhancer/se_diff_paper/SEprofiler/")
devtools::load_all()
setwd("~/Projects/super_enhancer/se_diff_paper/ENCODE/HCT116_HepG2/")
# rose SE output table
main_sample_1_r1 <- read.table("input/HCT116_1_peaks_Gateway_SuperEnhancers.bed",sep='\t', header =F)
main_sample_1_r2 <- read.table("input/HCT116_2_peaks_Gateway_SuperEnhancers.bed",sep='\t', header =F)
main_sample_2_r1 <- read.table("input/HepG2_1_peaks_Gateway_SuperEnhancers.bed",sep='\t', header =F)
main_sample_2_r2 <- read.table("input/HepG2_2_peaks_Gateway_SuperEnhancers.bed",sep='\t', header =F)
main_df <- rbind(main_sample_1_r1,main_sample_2_r1,main_sample_1_r2,main_sample_2_r2)
colnames(main_df) <- c("CHROM","START","STOP","REGION_ID","Signal","STRAND")
blacklist_df <- read.table("../../../ENCFF356LFX_blacklist.bed",sep = '\t')
enhancer_s1_r1 <- read.table("input/HCT116_1.bed",sep='\t')
enhancer_s1_r2 <- read.table("input/HCT116_2.bed",sep='\t')
enhancer_s2_r1 <- read.table("input/HepG2_1.bed",sep='\t')
enhancer_s2_r2 <- read.table("input/HepG2_2.bed",sep='\t')
s1_r1_bam_path <- "input/HCT116_1.bigwig"
s1_r2_bam_path <- "input/HCT116_2.bigwig"
s2_r1_bam_path <- "input/HepG2_1.bigwig"
s2_r2_bam_path <- "input/HepG2_2.bigwig"
pool_enhancer_df <- rbind(enhancer_s1_r1,enhancer_s1_r2,enhancer_s2_r1,enhancer_s2_r2)
colnames(pool_enhancer_df) <- c("chr", "start","end","name","score","strand",
"signalValue","pValue","qValue","peak")
gc()
gc()
library(rtracklayer)
bw <- BigWigFileList(s1_r1_bam_path)
gc()
setwd("~/Projects/super_enhancer/se_diff_paper/ENCODE/HCT116_HepG2/")
bw <- BigWigFileList(s1_r1_bam_path)
coverage <- import(bw[[1]], as = 'RleList')
gc()
rm(coverage)
gc()
gc()
ls()
memory.size(max=T)
ls()
coverage
gc()
object_size(bw)
install.packages("pryr")
library(pryr)
object_size(bw)
object_size(main_df)
coverage <- import(bw[[1]], as = 'RleList')
mem_used()
gc()
mem_change(rm(coverage))
bw <- BigWigFileList(s1_r1_bam_path,s1_r2_bam_path,s2_r1_bam_path,s2_r2_bam_path)
s1_r1_bam_path <- "input/HCT116_1.bigwig"
s1_r2_bam_path <- "input/HCT116_2.bigwig"
s2_r1_bam_path <- "input/HepG2_1.bigwig"
s2_r2_bam_path <- "input/HepG2_2.bigwig"
bw <- BigWigFileList(c(s1_r1_bam_path,s1_r2_bam_path,s2_r1_bam_path,s2_r2_bam_path))
count_bw <- function(bw_path,chr_list) {
bw <- BigWigFileList(bw_path)
coverage <- import(bw[[1]], as = 'RleList')
s_count <- data.frame()
for (i in c(1:length(chr_list))) {
temp_chr <- e_merge_by_chr[which(e_merge_by_chr$chr == chr_list[i]),]
temp_ir <- IRanges(temp_chr$start, temp_chr$end, names = temp_chr$chr)
temp_coverage <- coverage[[chr_list[i]]]
count <- as.numeric(sum(Views(temp_coverage, ranges(temp_ir))))
temp_out <- cbind(temp_chr$e_merge_name,count)
colnames(temp_out) <- c("e_merge_name","count")
rownames(temp_out) <- NULL
s_count <- rbind(s_count,temp_out)
}
return(s_count)
}
filter_out_2 <- SEfilter(main_df,bl_file = blacklist_df,has_bl_file = T)
chr_list <- unique(filter_out_2$se_merged_meta$chr)
chr_list
e_df<-pool_enhancer_df
se_df <- filter_out_2$se_merged_meta
in_se_df <- data.frame()
for (i in c(1:nrow(se_df))) {
in_se_temp <- e_df[which(e_df$chr==se_df$chr[i] &
e_df$start>=se_df$start[i] &
e_df$end<= se_df$end[i]),]
in_se_df <- rbind(in_se_df,in_se_temp)
}
# merge enhancers with gaps less than 500bps
ir <- IRanges(in_se_df$start,
in_se_df$end,
names = in_se_df$chr)
e_merge_by_chr <- rbindlist(lapply(split(ir, names(ir)),
function(x) as.data.table(reduce(x,min.gapwidth = 500))),
idcol = "chr")
# create merged enhancer names
e_merge_by_chr$e_merge_name <- apply(e_merge_by_chr[,c(1:3)],1, paste,collapse ="_" )
e_merge_by_chr$e_merge_name <- gsub(" ","",e_merge_by_chr$e_merge_name)
mem_used()
ls()
chr_list <- unique(filter_out_2$se_merged_meta$chr)
s1_1_count <- count_bw(s1_r1_bw,chr_list)
mem_used()
chr_list <- unique(filter_out_2$se_merged_meta$chr)
s1_1_count <- count_bw(s1_r1_bam_path,chr_list)
mem_used()
chr_list
count_bw <- function(bw_path,chr_list) {
bw <- BigWigFileList(bw_path)
coverage <- import(bw[[1]], as = 'RleList')
s_count <- data.frame()
for (i in c(1:length(chr_list))) {
temp_chr <- e_merge_by_chr[which(e_merge_by_chr$chr == chr_list[i]),]
temp_ir <- IRanges(temp_chr$start, temp_chr$end, names = temp_chr$chr)
temp_coverage <- coverage[[chr_list[i]]]
count <- as.numeric(sum(Views(temp_coverage, ranges(temp_ir))))
temp_out <- cbind(temp_chr$e_merge_name,count)
colnames(temp_out) <- c("e_merge_name","count")
rownames(temp_out) <- NULL
s_count <- rbind(s_count,temp_out)
}
return(s_count)
}
chr_list <- unique(filter_out_2$se_merged_meta$chr)
s1_1_count <- count_bw(s1_r1_bam_path,chr_list)
s1_2_count <- count_bw(s1_r2_bam_path,chr_list)
s2_1_count <- count_bw(s2_r1_bam_path,chr_list)
s2_2_count <- count_bw(s2_r2_bam_path,chr_list)
mem_used()
ls()
bw <- BigWigFileList(s2_r1_bam_path)
mem_used()
coverage
coverage <- import(bw[[1]], as = 'RleList')
mem_used(coverage)
mem_used()
bw <- BigWigFileList(c(s1_r1_bam_path,s1_r2_bam_path,s2_r1_bam_path,s2_r2_bam_path))
bw[[1]]
bw[[2]]
bw[[3]]
bw[[4]]
coverage <- import(bw[[1]], as = 'RleList')
mem_used()
ls()
mem_used(coerage)
coverage
coverage <- import(bw[[4]], as = 'RleList')
mem_used()
mem.maxVSize()
mem.maxVSize(vsize = 100)
mem.maxVSize(vsize = 10)
mem.maxVSize(vsize = 1)
?mem.maxVSize()
mem.maxVSize(vsize = Inf)
mem.maxVSize(vsize = Inf)
mem.maxVSize()
coverage <- import(bw[[4]], as = 'RleList')
mem_change(coverage)
setwd("~/Projects/super_enhancer/se_diff_paper/SEprofiler/")
devtools::load_all()
