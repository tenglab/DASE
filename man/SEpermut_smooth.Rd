% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SEpermut_smooth.R
\name{SEpermut_smooth}
\alias{SEpermut_smooth}
\title{Significance estimation with permutation}
\usage{
SEpermut_smooth(
  spline_fit_out,
  sample_pool,
  permut = T,
  times = 10,
  c1_n,
  c2_n
)
}
\arguments{
\item{spline_fit_out}{enhancer output file from SEfitspline}

\item{sample_pool}{enhancer counts shuffling pool
(header must be "e_merge_name","S1_r1","S1_r2","S2_r1","S2_r2", "se_merge_name"))}

\item{permut}{if you want permutation (default=TRUE)}

\item{times}{permutation times (default=10)}

\item{c1_n}{number of replicates (samples) in condition 1.}

\item{c2_n}{number of replicates (samples) in condition 2.}
}
\value{
se_permutation_df: permutation data frame
cutoff: final cutoff
cutoff_candidate: all cutoff candidates
density_plot: density plot of permuted and original log2 fold change
}
\description{
A function to estimate the significance cutoff with permutation
}
\details{
A permutation of counts of enhancers in SEs is used to decide the
cutoff of significant log2FC with shuffling pool. Cutoff was calculate by slope equal to range(y)/range(x).
The max value in range(-2,-1) and min value in range(1,2) are set to be lower and upper cutoff.
Coupled with smooth spline function.
}
\examples{
# default permutation 10 times
permut_out <- SEpermut_smooth(fit_spline_out_df,sample_pool,c1_n=2,c2_n=2)

# permutation 5 times
permut_out <- SEpermut_smooth(fit_spline_out_df,sample_pool,times=5,c1_n=2,c2_n=2)

# no permutation
permut_out <- SEpermut_smooth(fit_spline_out_df,sample_pool,permut=F,c1_n=2,c2_n=2)
}
